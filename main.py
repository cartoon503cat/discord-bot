import os
import threading
import discord
from flask import Flask
from discord.ext import commands

app = Flask("health")

@app.route("/")
def home():
    return "OK", 200

def run_web():
    port = int(os.getenv("PORT", "5000"))
    app.run(host="0.0.0.0", port=port)

intents = discord.Intents.default()
intents.message_content = True

bot = commands.Bot(command_prefix="!", intents=intents)

@bot.event
async def on_ready():
    print(f"‚úÖ –ë–æ—Ç —É–≤—ñ–º–∫–Ω–µ–Ω–∏–π: {bot.user} ‚Äî ready.")

@bot.event
async def on_message(message):
    if message.author == bot.user:
        return

    content = message.content.lower().strip()
    responded = False  # –ø—Ä–∞–ø–æ—Ä–µ—Ü—å, —á–∏ –≤–∂–µ –≤—ñ–¥–ø–æ–≤—ñ–ª–∏

    if not responded and content == "<:emoji_36:1390751091355942922>":
        await message.reply("–®–æ –≤–∏–ª—É–ø–∏–≤—Å—è üòë")
        responded = True
    if not responded and content == "–∂–∞—Ö":
        await message.reply("—è–∫–∏–π –∂–∞—Ö, —è–∫–∏–π –∂–∞—Ö –∞ —â–æ –Ω–µ –∂–∞—Ö, –∂–∞—Ö —è –∂ –∫–∞–∂—É, —è–∫–∏–π –∂–∞—Ö üò±")
        responded = True
    if not responded and "—Ä—Ä—Ä" in content:
        await message.reply("–†–∏—á–∞–ª–æ—á–∫–∞ —Ç–∏ ü•∞")
        responded = True

    # –ì—Ä—É–ø–∞ —Ñ—Ä–∞–∑ –¥–ª—è —Å–Ω—ñ–≤
    phrases = ["–¥–æ–±—Ä–∞–Ω—ñ—á", "—Å–æ–ª–æ–¥–∫–∏—Ö —Å–Ω—ñ–≤", "–Ω–∞–¥–æ–±—Ä–∞–Ω—ñ—á", "—è —Å–ø–∞—Ç–∏", "—Å–æ–ª–æ–¥–µ—Å–µ–Ω—å–∫–∏—Ö —Å–Ω—ñ–≤"]
    if not responded and any(phrase in content for phrase in phrases):
        await message.reply("–°–æ–ª–æ–¥–µ—Å–µ–Ω—å–∫–∏—Ö —Å–Ω—ñ–≤ ü•∞üò¥")
        responded = True

    # –†–µ–∞–∫—Ü—ñ—è –Ω–∞ –∞–π–ø—ñ (–∫—ñ–ª—å–∫–∞ –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤)
    ip_phrases = ["—è–∫–µ –∞–π–ø—ñ?", "—è–∫–µ –∞–π–ø—ñ", "–∞–π–ø—ñ", "ip"]
    if not responded and any(phrase in content for phrase in ip_phrases):
        await message.reply("–ê–π–ø—ñ —Å–µ—Ä–≤–µ—Ä–∞: `dragonseven.top`")
        responded = True
        
    # –¢—É—Ç –º–æ–∂–Ω–∞ –¥–æ–¥–∞–≤–∞—Ç–∏ —ñ–Ω—à—ñ —Ñ—Ä–∞–∑–∏...

    await bot.process_commands(message)

if __name__ == "__main__":
    t = threading.Thread(target=run_web)
    t.start()

    TOKEN = os.getenv("TOKEN")
    if not TOKEN:
        print("‚õî ERROR: TOKEN –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ ENV")
    else:
        bot.run(TOKEN)















