# bot.py
import os
import discord
import requests

from discord.ext import commands

# –í–∏—Ç—è–≥—É—î–º–æ —Ç–æ–∫–µ–Ω–∏ –∑ Environment Variables
DISCORD_TOKEN = os.environ["TOKEN"]
OPENROUTER_API_KEY = os.environ["OPENROUTER_API_KEY"]

# –°—Ç–≤–æ—Ä—é—î–º–æ –±–æ—Ç–∞
intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix="!", intents=intents)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ OpenRouter API
def ask_openrouter(prompt: str) -> str:
    url = "https://api.openrouter.ai/v1/chat/completions"
    headers = {
        "Authorization": f"Bearer {OPENROUTER_API_KEY}",
        "Content-Type": "application/json"
    }
    payload = {
        "model": "gpt-4o-mini",  # –õ–µ–≥–∫–∞, –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ –º–æ–¥–µ–ª—å
        "messages": [
            {"role": "system", "content": "–í–∏ –¥–æ–ø–æ–º–∞–≥–∞—î—Ç–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é."},
            {"role": "user", "content": prompt}
        ],
        "temperature": 0.7
    }

    try:
        response = requests.post(url, headers=headers, json=payload, timeout=15)
        response.raise_for_status()
        data = response.json()
        return data["choices"][0]["message"]["content"]
    except Exception as e:
        return f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –¥–æ OpenRouter: {e}"

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —á–∞—Ç—É –∑ AI
@bot.command(name="ai")
async def ai_chat(ctx, *, question: str):
    await ctx.send("ü§ñ –î—É–º–∫–∞ AI...")
    answer = ask_openrouter(question)
    await ctx.send(answer)

# –°—Ç–∞—Ä—Ç –±–æ—Ç–∞
bot.run(DISCORD_TOKEN)

