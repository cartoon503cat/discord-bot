import os
import discord
import aiohttp
import asyncio

# –¢–æ–∫–µ–Ω–∏ –∑ —Å–µ–∫—Ä–µ—Ç—ñ–≤ Replit
DISCORD_TOKEN = os.environ["TOKEN"]
HF_TOKEN = os.environ["HF_TOKEN"]

# Hugging Face –º–æ–¥–µ–ª—å ‚Äî –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞, —Ç–µ–∫—Å—Ç–æ–≤–∞, –ª–µ–≥–∫–∞
HF_MODEL = "mistralai/Mistral-7B-Instruct-v0.2"

intents = discord.Intents.default()
intents.messages = True
intents.message_content = True

client = discord.Client(intents=intents)

async def generate_response(prompt):
    url = f"https://api-inference.huggingface.co/models/{HF_MODEL}"
    headers = {"Authorization": f"Bearer {HF_TOKEN}"}
    data = {"inputs": prompt, "parameters": {"max_new_tokens": 200}}

    async with aiohttp.ClientSession() as session:
        async with session.post(url, headers=headers, json=data) as response:
            result = await response.json()
            try:
                text = result[0]["generated_text"]
                return text
            except Exception:
                return "üòï –í–∏–±–∞—á, –∞–ª–µ –º–æ–¥–µ–ª—å –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–ª–∞ –∞–±–æ –ø–µ—Ä–µ–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞."

@client.event
async def on_ready():
    print(f"‚úÖ –£–≤—ñ–π—à–æ–≤ —è–∫ {client.user}")

@client.event
async def on_message(message):
    if message.author == client.user:
        return

    # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞–ø–∏—Å–∞–≤ –∫–æ–º–∞–Ω–¥—É –∑ –ø—Ä–µ—Ñ—ñ–∫—Å–æ–º !
    if message.content.startswith("!ai"):
        prompt = message.content[len("!ai "):].strip()
        if not prompt:
            await message.channel.send("–ù–∞–ø–∏—à–∏ —â–æ—Å—å –ø—ñ—Å–ª—è `!ai`, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: `!ai –ü—Ä–∏–≤—ñ—Ç, —Ö—Ç–æ —Ç–∏?`")
            return

